
@page "/listcategory"
@inject HttpClient Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject IHttpClientFactory ClientFactory
@using Blazored.LocalStorage;

    @inject ProtectedLocalStorage Storage

    <h3>List Category</h3>
    <a class="btn btn-info" href="/addcategory">Create New</a>
    @if (categories == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>

                    <th>Name</th>
                    <th>Image</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cate in categories)
                {
                    <tr>

                        <td>@cate.Name</td>
                        <td><img src=@cate.ImageUrl width="75px" height="75px" /></td>
                        <td><a href="/updatecategory/@cate.Name">List Product by Brand</a></td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @code {

        public List<ProjectUnluCo.Models.Category> categories { get; set; }

        protected override async Task OnInitializedAsync()
        {
            var client = ClientFactory.CreateClient();

            var request = new HttpRequestMessage(HttpMethod.Get, "http://localhost:3000/api/category");


            var token = await Storage.GetAsync<string>("token");

            request.Headers.Authorization =
                new System.Net.Http.Headers.AuthenticationHeaderValue("Authorization", "Bearer <token>");

            HttpResponseMessage response = await Http.SendAsync(request, HttpCompletionOption.ResponseHeadersRead);

            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                categories = await Http.GetFromJsonAsync<List<ProjectUnluCo.Models.Category>>("http://localhost:3000/api/category");
            }



        }

    }
